@model Year
@using SoCFeedback.Enums
@{
    ViewData["Title"] = "Edit Year Form";
}

<form asp-action="Edit">
    <div>
        <h2>Edit</h2>
        <h4>Academic Year Form</h4>
        <hr />

        <div class="form-group row">
            <label class="col-md-4 col-form-label">Academic year starting:</label>
            <div class="col-md-8 row">
                <div class="col-xs-6">
                    <input asp-for="Year1" class="form-control" id="yearInput" />
                    <span asp-validation-for="Year1" class="text-danger"></span>
                </div>
                <div class="col-xs-6 col-form-label ">
                    Ending: <label class="font-weight-bold" id="endingYear"> @Html.DisplayFor(m => m.EndingYear)</label>
                </div>
            </div>
            <script type="text/javascript">
                $('#yearInput').on('input',
                    function () {
                        $("#endingYear").text(
                            parseInt($('#yearInput').val()) + 1);
                    });
            </script>
        </div>
        <div class="row">
            <div class="col-md-12">
                <hr />
                <h4>Modules running this year. Can be edited, until published.</h4>
                <h6>Archived modules will not show up in this list, active modules can be paused if they are not running this academic year.</h6>
                <hr />
                @for (var j = 0; j < Model.Levels.Count; j++)
                {
                    <input asp-for="@Model.Levels[j].Id" type="hidden" />
                    <input type="hidden" asp-for="@Model.Levels[j].Title" />
                    <span class=" text-primary h4 form-text">
                        @Html.DisplayFor(m => m.Levels[j].Title)
                    </span>
                    <ul class="list-group">
                        @for (var i = 0; i < Model.Modules.Count; i++)
                        {
                            if (Model.Modules[i].LevelId == Model.Levels[j].Id)
                            {
                                <li class=" list-group-item clearfix">
                                    @Html.HiddenFor(m => m.Modules[i].Id) @Html.HiddenFor(m => m.Modules[i].Code) @Html.HiddenFor(m => m.Modules[i].Title) @Html.HiddenFor(m => m.Modules[i].LevelId)
                                    @Html.DisplayFor(m => m.Modules[i].Code) @Html.DisplayFor(m => m.Modules[i].Title)
                                    <select asp-for="@Model.Modules[i].RunningStatus" asp-items="Html.GetEnumSelectList<RunningStatus>()" class="float-xs-right"></select>
                                </li>
                            }
                        }
                    </ul>
                }
            </div>
        </div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Status" />
        <div class="form-group">
            <br />
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="Index" class="float-xs-right">Back to List</a>
        </div>
    </div>
</form>