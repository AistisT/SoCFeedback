@inject UserManager<ApplicationUser> UserManager
@model AccountViewModel
@{
    ViewData["Title"] = "Edit an Account";
}

<h2>Edit an Account</h2>

<form asp-controller="Account" asp-action="Edit" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row">
        <label asp-for="Forename" class="col-md-2 form-control-label"></label>
        <div class="col-md-10">
            <input asp-for="Forename" class="form-control" />
            <span asp-validation-for="Forename" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Surname" class="col-md-2 form-control-label"></label>
        <div class="col-md-10">
            <input asp-for="Surname" class="form-control" />
            <span asp-validation-for="Surname" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Email" class="col-md-2 form-control-label"></label>
        <div class="col-md-10">
            <input asp-for="Email" class="form-control" readonly="readonly" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Role" class="form-control-label col-md-2"></label>
        <div class="col-md-10">

            @if (!UserManager.GetUserName(User).Equals(Model.Email))
            {
                @: <select asp-for="Role" asp-items="Html.GetEnumSelectList<Roles>()" class="form-control"></select>
            }
            else
            {
                @: <input asp-for="Role" asp-items="Html.GetEnumSelectList<Roles>()" class="form-control" readonly="readonly" />
            }
            <span asp-validation-for="Role" class="text-danger"></span>

        </div>
    </div>
    <div class="form-group col-sm-12">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a asp-action="Index" class="float-sm-right">Back to List</a>
    </div>
</form>