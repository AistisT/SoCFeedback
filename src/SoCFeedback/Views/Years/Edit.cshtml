@model SoCFeedback.Models.Year
@using SoCFeedback.Enums
@{
    ViewData["Title"] = "Edit Year Form";
}

<form asp-action="Edit">
    <div class="col-md-12">
        <h2>Edit</h2>
        <h4>Year Form</h4>
        <hr />
    </div>
        <div class="form-group">
            <label asp-for="Year1" class="col-md-2 form-control-label"></label>
            <div class="col-md-2">
                <input asp-for="Year1" class="form-control" id="yearInput"/>
                <span asp-validation-for="Year1" class="text-danger"></span>
            </div>
            <div class="col-md-8"> Please enter only starting year for academic term, e.g. 2016/2017 academic year would be 2016. </div>
        </div>
        <div class="col-md-12">
            <hr/>
            <h4>Modules running this year. Can be edited, until published.</h4>
            <h6>Archived modules will not show up in this list, active modules can be paused if they are not running this academic year.</h6>
            <hr/>
            @for (int j = 0; j < Model.Levels.Count; j++)
            {
                <input asp-for="@Model.Levels[j].Id" type="hidden"/><input type="hidden" asp-for="@Model.Levels[j].Title"/>
                <span class=" text-primary h4 form-text">
                    @Html.DisplayFor(m => m.Levels[j].Title)
                </span>
                <ul class="list-group">
                    @for (int i = 0; i < Model.Modules.Count; i++)
                    {
                        if (Model.Modules[i].LevelId == Model.Levels[j].Id)
                        {
                            <li class=" list-group-item">
                                @Html.HiddenFor(m => m.Modules[i].Id) @Html.HiddenFor(m => m.Modules[i].Code) @Html.HiddenFor(m => m.Modules[i].Title) @Html.HiddenFor(m => m.Modules[i].LevelId)
                                @Html.DisplayFor(m => m.Modules[i].Code) @Html.DisplayFor(m => m.Modules[i].Title)
                                <select asp-for="@Model.Modules[i].RunningStatus" asp-items="Html.GetEnumSelectList<RunningStatus>()" class="float-md-right"></select>
                            </li>
                        }
                    }
                </ul>
            }
        </div>
        <input type="hidden" asp-for="Status"/>
        <div class="form-group col-sm-12">
            <hr/>
            <input type="submit" value="Save" class="btn btn-primary"/>
            <a asp-action="Index" class="float-md-right">Back to List</a>
        </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}